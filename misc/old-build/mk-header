# Build settings
TARGET=debug
PLATFORM=win
NAME=calx
UINAME=calx_ui
BUILD=./build
WXLIB=
EXTRA=
DEVAPI=standart

# Linux build specific
OUTPUT_linux=$(NAME)
OUTPUT_LIB_linux=lib$(NAME).so
OUTPUT_UI_linux=$(UINAME)
CC_linux=g++
LANG_linux=-std=c++11 -Wall -Wextra -pedantic -Wno-unused-parameter
DBG_debug_linux=-O0 -DLOGGING
DBG_release_linux=-O2
INCLUDES_linux=-I.
CFLAGS_LIB_linux=-fPIC
LDFLAGS_LIB_linux=
CFLAGS_linux=$(LANG_linux) $(INCLUDES_linux)
LDFLAGS_linux=-lpthread

# Windows specific
OUTPUT_win=$(NAME).exe
OUTPUT_LIB_win=$(NAME).dll
OUTPUT_UI_win=$(UINAME).exe
CC_win=i686-w64-mingw32-g++
LANG_win=-std=c++11 -Wall -Wextra -pedantic -Wno-unused-parameter -Wno-attributes
DBG_debug_win=-O0 -DLOGGING
DBG_release_win=-O2
INCLUDES_win=-I.
CFLAGS_LIB_win=
LDFLAGS_LIB_win=
CFLAGS_win=$(LANG_win) $(DBG_win) $(INCLUDES_win)
LDFLAGS_win=-static-libgcc -static-libstdc++ -Wl,-Bstatic -lstdc++ -lpthread -Wl,-Bdynamic
CONVERT := $(shell command -v convert 2> /dev/null)
ifdef CONVERT
ICON=calxui.res
ifeq ($(PLATFORM), win)
ICON_RES=$(ICON)
endif
endif

# Build parameters
OUTPUT=$(OUTPUT_$(PLATFORM))
OUTPUT_LIB=$(OUTPUT_LIB_$(PLATFORM))
OUTPUT_UI=$(OUTPUT_UI_$(PLATFORM))
CC=$(CC_$(PLATFORM))
LANG=$(LANG_$(PLATFORM))
DBG=$(DBG_$(TARGET)_$(PLATFORM))
INCLUDES=$(INCLUDES_$(PLATFORM))
CFLAGS_LIB=$(CFLAGS_LIB_$(PLATFORM))
LDFLAGS_LIB=$(LDFLAGS_LIB_$(PLATFORM))
CFLAGS=$(CFLAGS_$(PLATFORM)) $(DBG) $(EXTRA)
LDFLAGS=$(LDFLAGS_$(PLATFORM))
