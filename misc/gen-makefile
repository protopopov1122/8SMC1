#!/bin/bash

# Append header to Makefile
cat misc/mk-header 

ALL='\t$(MAKE) $(OUTPUT).dll\n'

# Generate Device API handlers

function GenDevAPI {
	find device/$1 -name "*.cpp" -or -name "*.cxx" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o:\n\t$(CC) $(CFLAGS) '$2' -c "$0"\n"}'
	OBJS=`find device/$1 -name "*.cpp" -or -name "*.cxx" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o"}' | tr '\n' ' '`
	printf "dev_$1.dll: $OBJS \$(OUTPUT).dll\n\t\$(CC) \$(CFLAGS) -shared -o \$(BUILD)/dev_$1.dll $OBJS $3 \$(LDFLAGS) -Wl,--library-path=\$(LIB) -lcalx -Wl,--out-implib,\$(BUILD)/\dev_$1.a\n"
	ALL=$ALL"\t\$(MAKE) dev_$1.dll\n"
}

GenDevAPI "8smc1" "-Ires" "-Wl,-Bdynamic,--library-path=\$(BUILD) -lUSMCDLL"

ALL=$ALL'\t$(MAKE) $(OUTPUT).exe\n\t$(MAKE) $(UI).exe\n'

# Generate library, stub and cli object file build targets
printf "\n" 
find device -maxdepth 1 -name "*.cpp" -or -name "*.cxx" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o:\n\t$(CC) $(CFLAGS) -c "$0"\n"}'
find misc -name "Stub.cpp" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o:\n\t$(CC) $(CFLAGS) -Ires -c "$0"\n"}'
find ctrl-lib cli -name "*.cpp" -or -name "*.cxx" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o:\n\t$(CC) $(CFLAGS) -c "$0"\n"}'
 
# Generate ui object file build targets
printf "\n" 
find ui -name "*.cpp" -or -name "*.cxx" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o:\n\t$(CC) $(CFLAGS) -I ui `$(WX)/wx-config --cxxflags` -c "$0"\n"}' 

# Generate 8SMC1 Stub link target
printf "stub: Stub.o\n\t\$(CC) -shared -o \$(BUILD)/USMCDLL.dll Stub.o \$(LDFLAGS)\n\n" 

# Generate console program link target
printf "\$(OUTPUT).exe: \$(OUTPUT).dll dev_8smc1.dll " 
OBJS=`find cli -name "main.cpp" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o"}' | tr '\n' ' '`
echo $OBJS 
printf "\t@mkdir -p \$(BUILD)\n"
printf "\t\$(CC) -o \$(BUILD)/\$(OUTPUT).exe " 
printf "$OBJS" 
printf " \$(LDFLAGS) -Wl,--library-path=\$(BUILD) -ldev_8smc1 -l\$(OUTPUT)\n\n" 

#Generate Ctrl-lib link target
printf "\$(OUTPUT).dll: "
OBJS1=`find ctrl-lib -name "*.cpp" -or -name "*.cxx" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o"}' | tr '\n' ' '`
OBJS2=`find cli -not -name "main.cpp" -and -name "*.cpp" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o"}' | tr '\n' ' '`
OBJS3=`find device -maxdepth 1 -name "*.cpp" -or -name "*.cxx" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o"}' | tr '\n' ' '`
OBJS=$OBJS1$OBJS2$OBJS3
echo $OBJS 
printf "\t@mkdir -p \$(BUILD)\n"
printf "\t\$(CC) -shared -o \$(BUILD)/\$(OUTPUT).dll " 
printf "$OBJS" 
printf " \$(LDFLAGS) -Wl,--out-implib,\$(BUILD)/\$(OUTPUT).a\n\n" 

#Generate UI link target
printf "\$(UI).exe: "
OBJS=`find ui -name "*.cpp" -or -name "*.cxx" | awk -F/ '{split($NF, arr, "\\."); print arr[1]".o"}' | tr '\n' ' '`
echo $OBJS
printf "\t@mkdir -p \$(BUILD)\n"
printf "ifneq (\$(WXLIB),)\n"
printf "\tcp \$(WX)/\$(WXLIB) \$(BUILD)\n"
printf "endif\n"
printf "\t\$(CC) -o \$(BUILD)/\$(UI).exe " 
printf "$OBJS" 
printf ' $(LDFLAGS) -Wl,--library-path=\$(BUILD) -lcalx `$(WX)/wx-config --libs`\n\n'

printf "all:\n$ALL\t\$(MAKE) copy\n\n"

# Append footer to Makefile
cat misc/mk-footer 
